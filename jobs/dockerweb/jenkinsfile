pipeline {
    agent any
    parameters {
        string(name: 'name_container', defaultValue: 'felipemoralescybertrust', description: 'nombre del docker')
        string(name: 'name_imagen', defaultValue: 'jenkinsprueba', description: 'nombre de la imagen')
        string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
        string(name: 'puerto_imagen', defaultValue: '81', description: 'puerto a publicar')
    }
    environment {
        name_final = "${name_container}/${tag_imagen}:${puerto_imagen}"        
    }
    stages {
        stage('stop/rm') {
            steps {
                script {
                    def dockerExist = bat(script: 'docker ps -q --filter "name=felipemoralescybertrust/latest:81"', returnStatus: true).trim()

                    if (dockerExist == 0) {
                        echo 'Docker container does not exist, no need to stop/remove.'
                    } else {
                        bat 'docker stop felipemoralescybertrust/latest:81'
                        bat 'docker rm felipemoralescybertrust/latest:81'
                    }
                }
            }
        }

        stage('build') {
            steps {
                script {
                    bat """
                        docker build jobs/dockerweb/ -t ${name_imagen}:${tag_imagen} .
                    """
                }
            }
        }

        stage('run') {
            steps {
                script {
                    bat """
                        docker run -dp ${puerto_imagen}:81 --name ${name_container} ${name_imagen}:${tag_imagen}
                    """
                }
            }
        }
    }
}